         nam   REL         ttl   os9 system module* Disassembled 2014/11/15 21:15:26 by Disasm v1.5 (C) 1988 by RMLLevel    equ   2H6309    equ   1         ifp1         use   /dd/defs/os9defs         endctylg     set   Systm+Objctatrv     set   ReEnt+revrev      set   $04         mod   eom,name,tylg,atrv,start,sizeu0000    rmb   0size     equ   .name     equ   *         fcs   /REL/         fcb   $05L0011    fcb   $6C          MMU, IRQ, Vector page, SCS         fcb   $00          Map type 0         fcb   $00          No FIRQ         fcb   $00          No IRQ         fdb   $0900        timer         fcb   $00         fcb   $00         fcb   $0B          50Hz refresh         fcb   $34          200 lines 80 columnde         fcb   $3F          white border         fcb   $00          display in lower 512k bank         fcb   $00          vertical fine scroll set to 0         fcb   $EC          display block where-ever         fcb   $01          offset 8 bytes         fcb   $00          no horizontal scrollcrash    lda   #'*          signal a crash error         jsr   <D.BtBug         tfr   b,a          save error code         jsr   <D.BtBug     and dump this out too         club         fcb   $8C          skip 2 bytesstart    ldb   #$FF         negative - do complete boot         orcc  #IntMasks    irq off         clr   >$FF03       sam irq off         tfr   0,dp         set system DP         clr   <D.CBStrt    don't re-boot on reset         clr   >$FFA0       map block 0         lds   #$1FFF       set stack to end of block         clra         stb   ,-s          save status of start 0=cold 1=warm         beq   L004D* clear system DP         ldb   #$20         start out ar $20L0044    tfr   d,xL0046    sta   ,x+         incb         bne   L0046         inc   <D.SpeedL004D    clrb         stb   >$FFD9         leay  <L0011,pcr         ldx   #$0090         decaL0058    ldu   ,y++         stu   d,x         stu   ,x++         cmpx  #$00A0         bcs   L0058         ldd   #$3F00       color black on white         std   >$FFB0         lda   #$3B         sta   >$FFA4         ldx   #$8000         ldq   #$8A340008         tst   ,s           complete boot?         bmi   L007F        yes         cmpd  ,x         beq   L008EL007F    stq   ,x         leax  $08,x         ldw   #$07D0         leau  <L009C,pcr         tfm   u,x+L008E    leau  <L00A8,pcr         bsr   L009E         ldb   ,s+         bne   L00C8         bsr   L009E         clr   >$FF40L009C    bra   L009CL009E    ldy   ,u++             where to put the textL00A1    ldf   ,u+              get size of textL00A4    tfm   u+,y+            move data         rtsL00A8    fdb   $8396         fcb   $14         fcc   /Welcome to NitrOS-9!/         fdb   $843d         fcb   $06         fcc   /FAILED/L00C8    tfr   pc,d             get address at which we are executing         cmpa  #$26             we still at DOS point?         bne   L00F4            no, continue boot         ldu   #$2600         ldw   #$1200           get size of boot track         ldy   #$ED00           where to put it         bsr   L00A4         jmp   >$EDFAL00DE    pshs  x,b,a,cc         orcc  #IntMasks         ldb   #$3B         stb   >$FFA0         ldx   >$0002         sta   ,x+         stx   >$0002         clr   >$FFA0         puls  pc,x,b,a,ccL00F4    lda   #$7E         sta   <D.BtBug         leax  <L00DE,pcr         stx   <D.BtBug+1         leau  <L0112,pcr         ldy   #D.Crash         bsr   L00A1         ldmd  #$03         inc   <D.MDREG         ldx   #$F000         ldd   M$Exec,x         jmp   d,xL0112    fcb   $10         clr   >$FF91         jmp   >$ED27         neg   <u0000         lsr   >$127F         stu   >$DF7E         std   -$0F,y         rts         rts         rts         rts         emodeom      equ   *         end