
         nam   IOMan         ttl   os9 system module    * Disassembled 2015/01/03 23:18:34 by Disasm v1.5 (C) 1988 by RML         ifp1         use   /dd/defs/defsfile         endctylg     set   Systm+Objct   atrv     set   ReEnt+revrev      set   $01         mod   eom,name,tylg,atrv,start,sizeu0000    rmb   423size     equ   .name     equ   *         fcs   /IOMan/         fcb   $0C start    equ   *         ldx   <D.Init       get pointer to init module         lda   DevCnt,x      get # entries in device table         ldb   #DEVSIZ       get size of each entry         mul                 calculate size of table         pshs  d             preserve it         lda   PollCnt,x     get # entries in polling table         ldb   #POLSIZ       get size of each entry         mul                 calculate size         pshs  d             preserve it         asld                multiply by 2         addd  $02,s         add to size of device table         os9   F$SRqMem      allocate memory         lbcs  L008D         halt if error* clear allocated mem         leax  ,u            point to it         leay  >L00D8,pc     point to a zero         tfr   d,w           move size to W         tfm   y,x+          clear table         stu   <D.DevTbl     save pointer to table in DP         puls  d,x           restore D=sz of virq polng table, X=sz of device irq p          addr  u,x         stx   <D.PolTbl         addr  d,x         stx   <D.CLTb         ldx   <D.PthDBT     get path desc. tabl pointer         os9   F$All64       split into 64 byte chunks         bcs   L008D         stx   <D.PthDBT         os9   F$Ret64          leax  >L077D,pc     point to IRQ polling routine         stx   <D.Poll*         ldq   >$0350        get F$SRqMem & F$SRtMem vector out of system dispatch table         stq   >$0670        save em*         leay  <L008F,pc      point to service table (replaces F$SRqMem & F$SRtMem)         os9   F$SSvc *         leau  >L006F,pc     point to mapping routine?         stu   <D.SysVec         clrb*         rts   * New for L3L006F    lda   >$0642         bne   L008B         lda   >$0643         pshs  a         jsr   ,x         puls  a         sta   >$0643         sta   >$FFA1         inca           sta   >$0645         sta   >$FFA2         rts   L008B    jmp   ,xL008D    jmp   <D.CrashL008F    fcb   $7f         fdb   $0115         fcb   $01       F$Load         fdb   $0773         fcb   $81       I$Detach0         fdb   $079d         fcb   $0f       F$PErr         fdb   $0962         fcb   $ab       F$IOQu         fdb   $09a7         fcb   $ff         fdb   $010b         fcb   $aa       F$IRQ         fdb   $064f         fcb   $b3       F$IODel         fdb   $000d         fcb   $21       F$NMLink         fdb   $0723         fcb   $22       F$NMLoad         fdb   $0701         fcb   $a8       F$SRqMem   ?????? in os9p1         fdb   $0049         fcb   $a9       F$SRtMem   ?????? in os9p1         fdb   $008a         fcb   $80* Check device status service call** Entry: U = Callers register stack pointer*         ldx   R$X,u         ldu   <D.Init         ldb   DevCnt,u         ldu   <D.DevTblL00BC    ldy   V$DESC,u         beq   L00CD         cmpx  V$DESC,u         beq   L00D4         cmpx  V$DRIV,u         beq   L00D4         cmpx  V$FMGR,u         beq   L00D4L00CD    leau  DEVSIZ,u         decb           bne   L00BC         clrb           rts   L00D4    comb           ldb   #E$ModBsy         rts   L00D8    fcb   $00** This next block of code is all new for L3*L00D9    pshs  u,y,x,dp         pshsw         pshs  b,a,cc         leau  ,s         ldd   1,u         addd  #$00FF         clrb         std   1,u         bsr   L0100L00EB    tfr   cc,a         bcc   L00F1         stb   2,sL00F1    sta   ,s         puls  b,a,cc         pulsw         puls  pc,u,y,x,dpL00F9    ldx   $0C,u         cmpx  #$6000         bhi   L010FL0100    ldx   #$2000         leay  $40,x         leax  a,xL0108    ldb   1,u         cmpr  x,y         bhi   L0113L010F    jmp   [>$0670]L0113    lda   ,-y         bne   L0108         decb         bne   L0113         tfr   y,d         addr  b,a         clrb         std   $0a,u         ldb   1,u         lda   #$01L0126    sta   ,y+         decb           bne   L0126L012B    clrb           rts   L012D    comb           ldb   #$D2         rts   L0131    pshs  u,y,x,dp         pshsw          pshs  b,a,cc         leau  ,s         bsr   L013D         bra   L00EBL013D    ldd   $01,u         beq   L012B         addd  #$00FF         ldb   $0B,u         bne   L012D         ldb   $0A,u         cmpb  #$20         beq   L012D         cmpb  #$60         bcs   L0156         jmp   [>$0672]L0156    subb  #$20         ldx   #$2000         abx   L015C    clr   ,x+         deca           bne   L015C         clrb           rts* end of L3 additionL0163    fdb   $005a         fdb   $0214         fdb   $02ea         fdb   $0321         fdb   $0321         fdb   $0359         fdb   $0376         fdb   $03ac         fdb   $043c         fdb   $0458         fdb   $045d         fdb   $0458         fdb   $045d         fdb   $0506         fdb   $043c         fdb   $0569         fdb   $03b2L0185    fdb   $0038         fdb   $01f2         fdb   $02df         fdb   $0312         fdb   $0312         fdb   $0337         fdb   $0354         fdb   $038a         fdb   $041f         fdb   $0462         fdb   $0440         fdb   $0462         fdb   $0440         fdb   $04ec         fdb   $041f         fdb   $0557         fdb   $0390L01A7    leax  <L0163,pc         bra   L01AFL01AC    leax  <L0185,pcL01AF    cmpb  #$20         bhi   L01B9         ldw   b,x         lsrb         jmp   w,xL01B9    comb           ldb   #$D0         rts   ** I$Attach*L01BD    ldw   #$001B         leas  <-$1B,s         leax  >L00D8,pcr         tfr   s,y         tfm   x,y+         stu   <$19,s         lda   $01,u         sta   $0D,sL01D4    ldx   <D.Proc         stx   <$17,s         leay  <$40,x         ldx   <D.SysPrc         stx   <D.Proc         ldx   $06,u         lda   #$F0         os9   F$SLink          bcs   L021B         stu   $04,s         ldy   <$19,s         stx   $06,y         leax  ,u         lbsr  L035A         lda   $0E,u         sta   $0E,s         ldd   $0F,u         std   $0F,s         ldx   $0B,u         addr  u,x         lda   #$E0         os9   F$Link            bcs   L021B         stu   ,s         sty   $09,s         ldu   $04,s         ldx   $09,u         addr  u,x         lda   #$D0         os9   F$Link   L021B    ldx   <$17,s         stx   <D.Proc         bcc   L0230L0222    stb   <$1A,s         leau  ,s         os9   I$Detach          leas  <$1A,s         comb           puls  pc,bL0230    stu   $06,s         sty   $0B,s         ldx   <D.Init         ldb   $0D,x         tfr   b,f         ldu   <D.DevTblL023D    ldx   $04,u         beq   L027A         cmpx  $04,s         bne   L025C         ldx   $02,u         bne   L0257         lde   $08,u         beq   L023D         pshs  u,b         lbsr  L0A48         puls  u,b         bra   L023DL0257    stu   <$11,s         ldx   $04,uL025C    ldy   $0F,x         cmpy  $0F,s         bne   L027A         lde   $0E,x         cmpe  $0E,s         bne   L027A         ldx   ,u         cmpx  ,s         bne   L027A         ldx   $02,u         stx   $02,s         tst   $08,u         beq   L027AL027A    leau  $0D,u         decb           bne   L023D         ldu   <$11,s         lbne  L0332         ldu   <D.DevTbl         tfr   f,aL028A    ldx   $04,u         beq   L02A4         leau  $0D,u         deca           bne   L028A         ldb   #$CC         lbra  L0222L0298    lsrd           lsrd           lsrd           lsrd           lsrd           clra           rts   L02A4    ldx   $04,s         lbsr  L035A         ldx   $02,s         lbne  L0327         stu   <$11,s         ldx   ,s         ldd   $0B,x         lbsr  L00D9         lbcs  L0222         stu   $02,s         leay  $03,s         tfr   d,w         tfm   y,u+         ldd   $0E,s         bsr   L0298         std   <$15,s         ldu   #$0000         tfr   u,y         stu   <$13,s         ldx   <D.SysDATL02D7    ldd   ,x++         cmpd  <$15,s         beq   L0309         cmpd  #$333E         bne   L02EB         sty   <$13,s         leau  -$02,xL02EB    leay  >$2000,y         bne   L02D7         ldb   #$ED         cmpr  0,u         lbeq  L0222         ldd   <$15,s         std   ,u         ldx   <D.SysPrc         oim   #$10,$0C,x         os9   F$ID              bra   L030DL0309    sty   <$13,sL030D    ldd   $0F,s         anda  #$1F         addd  <$13,s         ldu   $02,s         clr   ,u         std   $01,u         ldy   $04,s         jsr   [<$09,s]         lbcs  L0222         ldu   <$11,sL0327    ldw   #$000D         tfr   s,x         tfm   x+,u+         leau  -$0D,uL0332    ldx   $04,u         lbsr  L035A         ldb   $07,x         lda   $0D,s         anda  $0D,x         ldx   ,u         anda  $0D,x         cmpa  $0D,s         beq   L034A         ldb   #$CB         lbra  L0222L034A    inc   $08,u         bne   L0350         dec   $08,uL0350    ldx   <$19,s         stu   $0A,x         leas  <$1B,s         clrb           rts   L035A    pshs  x,cc         lda   <$12,x         anda  #$01         ldx   #$0660         lda   a,x         orcc  #$50         sta   >$0643         sta   >$FFA1         inca           sta   >$0645         sta   >$FFA2         puls  pc,x,cc         ldu   $0A,u         ldx   $04,u         bsr   L035A         ldb   $08,u         bne   L038A         pshs  u,b         ldu   $02,u         bne   L03CC         clrb           puls  pc,u,aL038A    lda   #$FF         cmpa  $08,u         lbeq  L0448         dec   $08,u         lbne  L042C         ldx   <D.Init         ldb   $0D,x         pshs  u,b         ldx   $02,u         ldw   ,u         clr   $02,u         clr   $03,u         ldy   <D.DevTblL03AA    cmpw  ,y         bne   L03B3         cmpx  $02,y         beq   L0422L03B3    leay  $0D,y         decb           bne   L03AA         ldy   <D.Proc         ldb   ,y         stb   $08,u         ldy   $04,u         ldu   $09,u         exg   x,u         pshs  u         jsr   $0F,x         puls  uL03CC    ldx   $01,s         ldx   ,x         ldd   $0B,x         lbsr  L0131         ldx   $01,s         ldx   $04,x         ldd   $0E,x         beq   L0422         lbsr  L0298         cmpb  #$3F         beq   L0422         tfr   d,y         ldf   ,s         ldu   <D.DevTblL03EB    cmpu  $01,s         beq   L0400         ldx   $04,u         beq   L0400         ldd   $0E,x         beq   L0400         lbsr  L0298         cmpr  y,d         beq   L0422L0400    leau  $0D,u         decf           bne   L03EB         ldx   <D.SysPrc         ldu   <D.SysDAT         ldf   #$08L040D    ldd   ,u++         cmpr  y,d         beq   L041A         decf           bne   L040D         bra   L0422L041A    ldd   #DAT.Free         std   -$02,u         oim   #ImgChg,P$State,xL0422    puls  u,b         ldx   V$DESC,u         clr   V$DESC,u         clr   V$DESC+1,u         clr   V$USRS,uL042C    ldw   <D.Proc         ldd   <D.SysPrc         std   <D.Proc         ldy   V$DRIV,u         ldu   V$FMGR,u         os9   F$UnLink          leau  ,y         os9   F$UnLink          leau  ,x         os9   F$UnLink          stw   <D.ProcL0448    lbsr  L06A2         clrb           rts   ** UIDup*         bsr   L046E         bcs   L046D         pshs  x,a         lda   R$A,u         lda   a,x         bsr   L0466         bcs   L0462         puls  x,b         stb   R$A,u         sta   b,x         rts   L0462    puls  pc,x,a** SIDup*L0464    lda   R$A,uL0466    lbsr  L05CD         bcs   L046D         inc   PD.CNT,yL046D    rts   * Find next free path position in current proc* Exit: X = Ptr to proc's path table*       A = Free path number (valid if carry clear)*L046E    ldx   <D.Proc         leax  P$Path,x         clra  L0474    tst   a,x         beq   L0481         inca           cmpa  #NumPaths         bcs   L0474         comb           ldb   #E$PthFul         rts   L0481    andcc #^Carry         rts   ** IUsrCall*         bsr   L046E         bcs   L0496         pshs  u,x,a         bsr   L0497         puls  u,x,a         bcs   L0496         ldb   R$A,u         stb   a,x         sta   R$A,uL0496    rts   ** ISysCall*L0497    pshs  b         ldb   R$A,u         lbsr  L051D         bcs   L04BA         puls  b         lbsr  L0624         bcc   L04B5         bsr   L04C9         cmpb  #$C7         beq   L04AF         coma           rts   L04AF    bsr   L0464         bcs   L04B4         clrb  L04B4    rts   L04B5    lda   PD.PD,y         sta   R$A,u         rts   L04BA    puls  pc,a** IMakDir*         pshs  b         ldb   #DIR.+WRITE.L04C0    bsr   L051D         bcs   L04BA         puls  b         lbsr  L0624L04C9    pshs  u,b,cc         ldu   PD.DEV,y         os9   I$Detach          lda   PD.PD,y         ldx   <D.PthDBT         os9   F$Ret64          puls  pc,u,b,cc** IChgDir*         pshs  b         ldb   R$A,u         orb   #DIR.         bsr   L051D         bcs   L04BA         puls  b         lbsr  L0624         bcs   L04C9         ldu   <D.Proc         tim   #PWRIT.+PREAD.+UPDAT.,PD.MOD,y         beq   L04FC         ldx   PD.DEV,y         stx   P$DIO,u         inc   V$USRS,x         bne   L04FC         dec   V$USRS,x** IChgExec*L04FC    tim   #PEXEC.+EXEC.,PD.MOD,y         beq   L050C         ldx   $03,y         stx   <$26,u         inc   $08,x         bne   L050C         dec   $08,xL050C    clrb           bra   L04C9** IDelete*         pshs  b         ldb   #$02         bra   L04C0** IDeletX*         ldb   #$07         pshs  b         ldb   $01,u         bra   L04C0* Allocate path descriptor* Entry:*    B = modeL051D    ldx   <D.Proc         pshs  u,x         ldx   <D.PthDBT         os9   F$All64          bcs   L058A         inc   PD.CNT,y         stb   PD.MOD,y         ldx   <D.Proc         ldb   P$Task,x         ldx   R$X,uL0532    os9   F$LDABX          leax  1,x         cmpa  #C$SPAC         beq   L0532         leax  -1,x         stx   R$X,u         cmpa  #PDELIM         beq   L055F         ldx   <D.Proc         tim   #EXEC.,PD.MOD,y         beq   L054F         ldx   P$DIO+6,x         bra   L0552L054F    ldx   P$DIO,xL0552    beq   L058F         ldd   <D.SysPrc         std   <D.Proc         ldx   V$DESC,x         ldd   M$Name,x         addr  d,xL055F    pshs  y         os9   F$PrsNam          puls  y         bcs   L058F         lda   PD.MOD,y         os9   I$Attach          stu   PD.DEV,y         bcs   L0591         ldx   V$DESC,u         leax  M$Opt,x         ldf   ,x+         leau  PD.OPT,y         cmpf  #PD.OPT         bcs   L0584         ldf   #$20L0584    clre           tfm   x+,u+         clrb  L058A    puls  u,x         stx   <D.Proc         rts   L058F    ldb   #E$BPNamL0591    pshs  b         lda   ,y         ldx   <D.PthDBT         os9   F$Ret64          puls  b         coma           bra   L058A** UISeek*         bsr   L05D5         bcc   L05A6         rts   ** SISeek*         lda   R$A,uL05A6    bsr   L05CD         bcc   L0624         rts   L05AB    ldb   #E$Read         tim   #WRITE.,,s         beq   L05B8         ldb   #E$Write         bra   L05B8L05B6    ldb   #E$BModeL05B8    com   ,s+         rts   ** UIRead*         bsr   L05D5         bcc   L05E9         rts   ** UIWrite*         bsr   L05D5         bcc   L05C7         rts   ** SIWrite*         lda   R$A,uL05C7    pshs  b         ldb   #$02         bra   L05ED* get path descriptor* Passed:    A = path number* Returned:  Y = address of path desc for path numL05CD    ldx   <D.PthDBT         os9   F$Find64          bcs   L05E3         rts   * System to User Path routine** Returns:*   A = user path #*   X = path table in path desc. of current proc.L05D5    lda   R$A,u         cmpa  #NumPaths         bcc   L05E3         ldx   <D.Proc         adda  #P$Path         lda   a,x         bne   L05E6L05E3    comb           ldb   #E$BPNumL05E6    rts   ** SIRead*         lda   R$A,uL05E9    pshs  b         ldb   #EXEC.+READ.L05ED    bsr   L05CD         bcs   L05B8         bitb  PD.MOD,y         beq   L05B6         ldd   R$Y,u         beq   L0622         addd  R$X,u         bcs   L05AB         decd           lsra           lsra           lsra           lsra           lsra           ldb   R$X,u         lsrb           lsrb           lsrb           lsrb           ldx   <D.Proc         leax  P$DATImg,x         abx            lsrb           subr  b,a         tfr   a,eL0616    ldd   ,x++         cmpd  #DAT.Free         beq   L05AB         dece           bpl   L0616L0622    puls  bL0624    subb  #$03         pshs  u,y,x         ldx   <D.ProcL062A    lde   $05,y         bne   L0658         lda   P$ID,x         sta   PD.CPR,y         stu   PD.RGS,y         ldx   PD.DEV,y         ldx   $04,x* L3 addition         lbsr  L035A         ldx   $03,y         ldx   $0B,x         abx            abx            abx            jsr   ,xL0645    pshs  b,cc         bsr   L06A2         ldy   $04,s         ldx   <D.Proc         lda   ,x         cmpa  PD.CPR,y         bne   L0656         clr   PD.CPR,yL0656    puls  pc,u,y,x,b,ccL0658    pshs  u,y,x,b         lbsr  L0A48         puls  u,y,x,b         coma           lda   P$Signal,x         beq   L062A         tfr   a,b         bra   L0645** UIGetStt*         lbsr  L05D5         ldx   <D.Proc         bcc   L0675         rts   ** SIGetStt*         lda   R$A,u         ldx   <D.SysPrcL0675    pshs  x,b,a         lda   R$B,u         sta   $01,s         puls  a         lbsr  L05A6         puls  x,a         pshs  u,y,b,cc         tsta           beq   L068D         cmpa  #SS.DevNm         beq   L06BC         puls  pc,u,y,b,cc** SSOpt*L068D    lda   <D.SysTsk         ldb   P$Task,x         leax  PD.OPT,yL0694    ldy   #PD.OPT         ldu   R$X,u         os9   F$Move          leas  $02,s         clrb           puls  pc,u,yL06A2    pshs  y         ldy   <D.Proc         lda   P$IOQN,y         beq   L06B9         clr   P$IOQN,y         ldb   #S$Wake         os9   F$Send            os9   F$GProcP         clr   P$IOQP,yL06B9    clrb           puls  pc,y** SSDevNm*L06BC    lda   <D.SysTsk         ldb   P$Task,x         ldx   PD.DEV,y         ldx   V$DESC,x         ldw   M$Name,x         addr  w,x         bra   L0694** UIClose*         lbsr  L05D5         bcs   L06DB         lde   R$A,u         adde  #P$Path         clr   e,x         bra   L06DEL06DB    rts   * SIClose*         lda   R$A,uL06DE    lbsr  L05CD         bcs   L06DB         dec   PD.CNT,y         tst   PD.CPR,y         bne   L06EC         lbsr  L0624L06EC    tst   PD.CNT,y         bne   L06DB         lbra  L04C9** FIRQ*         ldx   R$X,u         ldb   ,x         ldx   $01,x         clra           pshs  cc         pshs  x,b         ldx   <D.Init         ldb   $0C,x         ldx   <D.PolTbl         ldy   R$X,u         beq   L0749         tst   $01,s         beq   L0777         decb           lda   #POLSIZ         mul            addr  d,x         lda   Q$MASK,x         bne   L0777         orcc  #IntMasksL071A    ldb   $02,s         cmpb  -$01,x         bcs   L072D         ldb   #POLSIZL0722    lda   ,-x         sta   POLSIZ,x         decb           bne   L0722         cmpx  <D.PolTbl         bhi   L071AL072D    ldd   R$D,u         std   Q$POLL,x         ldd   ,s++         std   Q$FLIP,x         ldb   ,s+         stb   Q$PRTY,x         ldq   R$Y,u         stq   Q$SERV,x* L3 addition         lda   >$0643         ldb   >$0645         std   $09,x         puls  pc,cc* remove the ISRL0749    leas  $04,s         ldy   R$U,uL074E    cmpy  Q$STAT,x         beq   L075A         leax  $0B,x         decb           bne   L074E         clrb           rts   L075A    orcc  #IntMasks         decb           beq   L0769         lda   #POLSIZ         mul            tfr   d,w         leay  POLSIZ,x         tfm   y+,x+L0769    ldw   #POLSIZ         clr   ,-s         tfm   s,x+         leas  $01,s         andcc #^IntMasks         rts   L0777    leas  $04,sL0779    comb           ldb   #$CA         rts   ***************************** Device polling routine** Entry: None*L077D    ldy   <D.PolTbl         ldx   <D.Init         lde   PollCnt,x* L3 additionL0785    ldd   Q$MAP,y         beq   L0792         std   >$FFA1         sta   >$0643         stb   >$0645L0792    lda   [Q$POLL,y]         eora  Q$FLIP,y         bita  Q$MASK,y         bne   L07A2L079A    leay  POLSIZ,y         dece           bne   L0785         bra   L0779L07A2    ldu   Q$STAT,y         pshs  y,b         jsr   [Q$SERV,y]         puls  y,b         bcs   L079A         rts   ** F$NmLoad*         pshs  u         ldx   R$X,u         lbsr  L084F         bcs   L0806         ldy   ,s         stx   R$X,y         ldy   ,u         ldx   $04,u         ldd   #$0006         os9   F$LDDDXY          leay  ,u         puls  u         bra   L07E3** F$NMLink*         ldx   <D.Proc         leay  <$40,x         pshs  u         ldx   $06,u         lda   $01,u         os9   F$FModul          bcs   L0806         leay  ,u         puls  u         stx   $06,uL07E3    std   $01,u         ldx   $06,y         beq   L07ED         bitb  #$80         beq   L0803L07ED    leax  $01,x         beq   L07F3         stx   $06,yL07F3    ldx   $04,y         ldy   ,y         ldd   #$000B         os9   F$LDDDXY          bcs   L0802         std   $08,uL0802    rts   L0803    comb           ldb   #$D1L0806    puls  pc,u** F$Load*         pshs  u         ldx   R$X,u         bsr   L084F         bcs   L0833         puls  yL0812    pshs  y         stx   R$X,y         ldy   ,u         ldx   $04,u         ldd   #$0006         os9   F$LDDDXY          ldx   ,s         std   R$D,x         leax  ,u         os9   F$ELink          bcs   L0833         ldx   ,s         sty   R$Y,x         stu   R$U,xL0833    puls  pc,u** I$Detach*         pshs  u         ldx   R$X,u         bsr   L084F         bcs   L084D         puls  y         ldd   <D.Proc         pshs  y,b,a         ldd   R$U,y         std   <D.Proc         bsr   L0812         puls  x         stx   <D.ProcL084D    puls  pc,u* Load module from file* Entry: X = pathlist to file containing module(s)* A fake process descriptor is created, then the file is* opened and validated into memory.*L084F    os9   F$AllPrc          bcc   L0855         rts   L0855    leay  ,u         tfr   0,u         pshs  u,y,x,b,a         leas  <-$11,s         clr   $07,s         stu   ,s         stu   $02,s         ldu   <D.Proc         stu   $04,s         clr   $06,s         lda   P$Prior,u         sta   P$Prior,y         sta   P$Age,y         lda   #EXEC.         os9   I$Open            lbcs  L0904         sta   $06,s         stx   <$13,s         ldx   <$15,s         os9   F$AllTsk          bcs   L0904         stx   <D.ProcL0888    ldx   <$15,s         lda   P$Prior,x         adda  #$08         bcc   L0893         lda   #$FFL0893    sta   P$Prior,x         sta   P$Age,x         ldd   #$0009         ldx   $02,s         lbsr  L0988         bcs   L0904         ldu   <$15,s         lda   P$Task,u         ldb   <D.SysTsk         leau  $08,s         pshs  x         ldx   $04,s         os9   F$Move          puls  x         ldd   M$ID,u         cmpd  #M$ID12         bne   L0902         ldd   M$Size,u         subd  #M$IDSize         lbsr  L0988         bcs   L0904         ldx   $04,s         lda   P$Prior,x         ldy   <$15,s         sta   P$Prior,y         sta   P$Age,y         leay  <P$DATImg,y         tfr   y,d         ldx   $02,s         os9   F$VModul          bcc   L08E3         cmpb  #E$KwnMod         beq   L08E9         bra   L0904L08E3    ldd   $02,s         addd  $0A,s         std   $02,sL08E9    ldd   <$17,s         bne   L0888         ldd   MD$MPtr,u         std   <$11,s         ldd   [MD$MPDAT,u]         std   <$17,s         ldd   MD$Link,u         incd           beq   L0888         std   MD$Link,u         bra   L0888L0902    ldb   #E$BMIDL0904    stb   $07,s         ldd   $04,s         beq   L090C         std   <D.ProcL090C    lda   $06,s         beq   L0913         os9   I$Close  L0913    ldd   $02,s         addd  #$1FFF         lsra           lsra           lsra           lsra           lsra           sta   $02,s         ldb   ,s         beq   L0940         lsrb           lsrb           lsrb           lsrb           lsrb           subb  $02,s         beq   L0940         ldx   <$15,s         leax  P$DATImg,x         lsla           leax  a,x         leax  $01,x         ldu   <D.BlkMapL0939    lda   ,x++         clr   a,u         decb           bne   L0939L0940    ldx   <$15,s         lda   P$ID,x         os9   F$DelPrc          ldd   <$17,s         bne   L0955         ldb   $07,s         stb   <$12,s         comb           bra   L0983L0955    ldu   <D.ModDir         ldx   <$11,s         ldd   <$17,s         leau  -MD$ESize,uL095F    leau  MD$ESize,u         cmpu  <D.ModEnd         bcs   L096E         comb           ldb   #E$MNF         stb   <$12,s         bra   L0983L096E    cmpx  MD$MPtr,u         bne   L095F         cmpd  [MD$MPDAT,u]         bne   L095F         ldd   MD$Link,u         beq   L097F         decd           std   MD$Link,uL097F    stu   <$17,s         clrb  L0983    leas  <$11,s         puls  pc,u,y,x,b,aL0988    pshs  y,x,b,a         addd  $02,s         std   $04,s         cmpd  $08,s         bls   L09E4         addd  #$1FFF         lsra           lsra           lsra           lsra           lsra           cmpa  #$07         bhi   L09C6         ldb   $08,s         lsrb           lsrb           lsrb           lsrb           lsrb           subr  b,a         lslb           exg   b,a         ldu   <$1D,s         leau  P$DATImg,u         leau  a,u         clra           tfr   b,f         ldy   <D.BlkMap         clrb  L09BB    tst   ,y+         beq   L09CBL09BF    incd           cmpy  <D.BlkMap+2         bne   L09BBL09C6    comb           ldb   #E$MemFul         bra   L09EEL09CB    inc   -$01,y         std   ,u++         lde   $08,s         adde  #$20         ste   $08,s         decf           bne   L09BF         ldx   <$1D,s         os9   F$SetTsk          bcs   L09EEL09E4    lda   $0E,s         ldx   $02,s         ldy   ,s         os9   I$Read   L09EE    leas  $04,s         puls  pc,x********************************** F$PErr System call entry point** Entry: U = Register stack pointer*L09F2    fcc   /ERROR #/errsz    equ   *-L09F2         fcb   $2f,$3a,$30         fcb   C$CRerrsz1   equ   *-L09F2         ldx   <D.Proc         lda   <$32,x         beq   L0A44         leas  -$0B,s         leax  <L09F2,pcr         leay  ,sL0A0B    lda   ,x+         sta   ,y+         cmpa  #$0D         bne   L0A0B         ldb   $02,uL0A15    inc   $07,s         subb  #$64         bcc   L0A15L0A1B    dec   $08,s         addb  #$0A         bcc   L0A1B         addb  #$30         stb   $09,s         ldx   <D.Proc         ldu   $04,x         leau  -$0B,u         lda   <D.SysTsk         ldb   $06,x         leax  ,s         ldy   #$000BL0A35    os9   F$Move          leax  ,u         ldu   <D.Proc         lda   <$32,u         os9   I$WritLn          leas  $0B,sL0A44    rts   ** I$IOQu*         lde   R$A,uL0A48    ldy   <D.Proc         clrf  L0A4D    lda   P$IOQN,y         beq   L0A71         cmpr  e,a         bne   L0A6C         stf   P$IOQN,y         os9   F$GProcP          bcs   L0AD3         stf   P$IOQP,y         ldb   #S$Wake         os9   F$Send            ldu   <D.Proc         bra   L0A7AL0A6C    os9   F$GProcP          bcc   L0A4DL0A71    tfr   e,a         ldu   <D.Proc         os9   F$GProcP          bcs   L0AD3L0A7A    leax  ,y         lda   P$IOQN,y         beq   L0A9C         os9   F$GProcP          bcs   L0AD3         ldb   P$Age,u         cmpb  P$Age,y         bls   L0A7A         ldb   ,u         stb   P$IOQN,x         ldb   ,x         stb   P$IOQP,u         stf   P$IOQP,y         exg   y,u         bra   L0A7AL0A9C    lda   ,u         sta   P$IOQN,y         lda   ,y         sta   P$IOQP,u         ldx   #$0000         os9   F$Sleep           ldu   <D.Proc         lda   P$IOQP,u         beq   L0AD3         os9   F$GProcP          bcs   L0AD0         lda   P$IOQN,y         beq   L0AD0         lda   P$IOQN,u         sta   P$IOQN,y         beq   L0AD0         stf   P$IOQN,u         os9   F$GProcP          bcs   L0AD0         lda   P$IOQP,u         sta   P$IOQP,yL0AD0    stf   P$IOQP,uL0AD3    rts            emodeom      equ   *         end